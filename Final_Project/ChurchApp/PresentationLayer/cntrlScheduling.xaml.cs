using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using DataObjects;
using LogicLayer;

namespace PresentationLayer
{
    /// <summary>
    /// Interaction logic for cntrlScheduling.xaml
    /// </summary>
     
    // This class is used to schedule employees to work at various activities that are planned. It is also used to show a volunteer schedule
    // although volunteers are allowed to sign up for activities on their own.
    public partial class cntrlScheduling : UserControl
    {
        IActivityManager _activityManager;
        IUserManager _userManager;
        IScheduleManager _scheduleManager;
        User _user;
        
        // This is the constructor for this class.
        public cntrlScheduling()
        {
            InitializeComponent();
            _activityManager = new ActivityManager();
            _userManager = new UserManager();
            _scheduleManager = new ScheduleManager();

            populateAllActivities();
            populateAllEmployees();
            populateAllVolunteers();
        }

        // This method populates the dgAllVolunteers data grid with user's that are assigned the role of volunteer.
        private void populateAllVolunteers()
        {
            try
            {
                dgAllVolunteers.ItemsSource = _userManager.RetrieveUsersByRoleID("Volunteer");
            }
            catch (Exception){}
        }

        // This method populates the dgAllEmployees data grid with user's that are assigned the role of employee.
        private void populateAllEmployees()
        {
            try
            {
                dgAllEmployees.ItemsSource = _userManager.RetrieveUsersByRoleID("Employee");
            }
            catch (Exception){}
        }

        // This method populates the dgAllActivities data grid with All the activites that are planned
        private void populateAllActivities()
        {
            try
            {
                dgAllActivities.ItemsSource = _activityManager.RetrieveAllActivitySchedulesByActive();
            }
            catch (Exception) { }   
        }

        // This event handler is fired when the columns for the dgAllActivities data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgAllActivities_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgAllActivities.Columns.RemoveAt(12);
            dgAllActivities.Columns.RemoveAt(11);
            dgAllActivities.Columns.RemoveAt(10);
            dgAllActivities.Columns.RemoveAt(9);
            dgAllActivities.Columns.RemoveAt(8);
            dgAllActivities.Columns.RemoveAt(7);
            dgAllActivities.Columns.RemoveAt(6);
            dgAllActivities.Columns.RemoveAt(5);
            dgAllActivities.Columns.RemoveAt(4);
            dgAllActivities.Columns.RemoveAt(3);
            dgAllActivities.Columns.RemoveAt(2);
            dgAllActivities.Columns.RemoveAt(0);

            dgAllActivities.Columns[0].Header = "Activity Name";
            dgAllActivities.Columns[1].Header = "Start Time";
            dgAllActivities.Columns[2].Header = "End Time";
        }

        // This event handler is fired when the columns for the dgAllEmployees data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgAllEmployees_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgAllEmployees.Columns.RemoveAt(13);
            dgAllEmployees.Columns.RemoveAt(12);
            dgAllEmployees.Columns.RemoveAt(11);
            dgAllEmployees.Columns.RemoveAt(10);
            dgAllEmployees.Columns.RemoveAt(9);
            dgAllEmployees.Columns.RemoveAt(8);
            dgAllEmployees.Columns.RemoveAt(7);
            dgAllEmployees.Columns.RemoveAt(6);
            dgAllEmployees.Columns.RemoveAt(5);
            dgAllEmployees.Columns.RemoveAt(4);
            dgAllEmployees.Columns.RemoveAt(3);
            dgAllEmployees.Columns.RemoveAt(0);

            dgAllEmployees.Columns[0].Header = "1";
        }

        // This event handler is fired when the columns for the dgAllVolunteers data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgAllVolunteers_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgAllVolunteers.Columns.RemoveAt(13);
            dgAllVolunteers.Columns.RemoveAt(12);
            dgAllVolunteers.Columns.RemoveAt(11);
            dgAllVolunteers.Columns.RemoveAt(10);
            dgAllVolunteers.Columns.RemoveAt(9);
            dgAllVolunteers.Columns.RemoveAt(8);
            dgAllVolunteers.Columns.RemoveAt(7);
            dgAllVolunteers.Columns.RemoveAt(6);
            dgAllVolunteers.Columns.RemoveAt(5);
            dgAllVolunteers.Columns.RemoveAt(4);
            dgAllVolunteers.Columns.RemoveAt(3);
            dgAllVolunteers.Columns.RemoveAt(0);

            dgAllVolunteers.Columns[0].Header = "1";
        }

        // This event handler is fired when the dgAllActivities selected item is changed. It then populates the volunteers signed up data grid
        // whith the volunteers that are signed up for that activity and populates the employees scheduled data grid with the employees that are
        // signed up for that activity
        private void DgAllActivities_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            populateVolunteersSignedUp();
            populateEmployeesScheduled();

            lblAssignEmployeeActivity.Content = ((ActivityVM)dgAllActivities.SelectedItem).ActivityName.ToString();
            lblUnassignEmployeeActivity.Content = ((ActivityVM)dgAllActivities.SelectedItem).ActivityName.ToString();
        }

        // This method populates the dgEmployeesScheduled data grid.
        private void populateEmployeesScheduled()
        {
            try
            {
                dgScheduledEmployees.ItemsSource = _scheduleManager.RetrieveUserScheduleByActivityID(((ActivityVM)dgAllActivities.SelectedItem).ActivityID, "Employee");
            }
            catch (Exception) { }
        }

        // This method populates the dgVolunteersSignedUp data grid.
        private void populateVolunteersSignedUp()
        {
            try
            {
                dgVolunteersSignedUp.ItemsSource = _scheduleManager.RetrieveUserScheduleByActivityID(((ActivityVM)dgAllActivities.SelectedItem).ActivityID, "Volunteer");
            }
            catch (Exception) { }
        }

        // This method populates the dgIndividualsScheduled data grid with a volunteers schedule.
        private void populateIndividualsVolunteerSchedule()
        {
            try
            {
                dgIndividualsSchedule.ItemsSource = _scheduleManager.RetrieveAllUserSchedulesByUserIDAndType(((User)dgAllVolunteers.SelectedItem).PersonID, "Volunteer");
            }
            catch (Exception) { }
        }

        // This method populates the dgIndividualsScheduled data grid with an employees schedule.
        private void populatIndividualsEmployeeSchedule()
        {
            try
            {
                dgIndividualsSchedule.ItemsSource = _scheduleManager.RetrieveAllUserSchedulesByUserIDAndType(((User)dgAllEmployees.SelectedItem).PersonID, "Employee");
            }
            catch (Exception) { }
        }

        // This event handler is fired when the columns for the dgVolunteersSignedUp data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgVolunteersSignedUp_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgVolunteersSignedUp.Columns.RemoveAt(16);
            dgVolunteersSignedUp.Columns.RemoveAt(15);
            dgVolunteersSignedUp.Columns.RemoveAt(14);
            dgVolunteersSignedUp.Columns.RemoveAt(13);
            dgVolunteersSignedUp.Columns.RemoveAt(12);
            dgVolunteersSignedUp.Columns.RemoveAt(11);
            dgVolunteersSignedUp.Columns.RemoveAt(10);
            dgVolunteersSignedUp.Columns.RemoveAt(9);
            dgVolunteersSignedUp.Columns.RemoveAt(8);
            dgVolunteersSignedUp.Columns.RemoveAt(5);
            dgVolunteersSignedUp.Columns.RemoveAt(4);
            dgVolunteersSignedUp.Columns.RemoveAt(3);
            dgVolunteersSignedUp.Columns.RemoveAt(2);
            dgVolunteersSignedUp.Columns.RemoveAt(1);
            dgVolunteersSignedUp.Columns.RemoveAt(0);
            

            dgVolunteersSignedUp.Columns[0].Header = "1";
        }

        // This event handler is fired when the columns for the dgScheduledEmployees data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgScheduledEmployees_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgScheduledEmployees.Columns.RemoveAt(16);
            dgScheduledEmployees.Columns.RemoveAt(15);
            dgScheduledEmployees.Columns.RemoveAt(14);
            dgScheduledEmployees.Columns.RemoveAt(13);
            dgScheduledEmployees.Columns.RemoveAt(12);
            dgScheduledEmployees.Columns.RemoveAt(11);
            dgScheduledEmployees.Columns.RemoveAt(10);
            dgScheduledEmployees.Columns.RemoveAt(9);
            dgScheduledEmployees.Columns.RemoveAt(8);
            dgScheduledEmployees.Columns.RemoveAt(5);
            dgScheduledEmployees.Columns.RemoveAt(4);
            dgScheduledEmployees.Columns.RemoveAt(3);
            dgScheduledEmployees.Columns.RemoveAt(2);
            dgScheduledEmployees.Columns.RemoveAt(1);
            dgScheduledEmployees.Columns.RemoveAt(0);

            dgScheduledEmployees.Columns[0].Header = "1";
        }

        // This event handler is fired when the selection for the dgAllVolunteers selected item is changed. It populates the dgIndiviualsSchedule 
        // data grid with the schedule of the chosen user.
        private void DgAllVolunteers_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                populateIndividualsVolunteerSchedule();

                lblIndividualsSchedule.Content = ((User)dgAllVolunteers.SelectedItem).FirstName + " " + ((User)dgAllVolunteers.SelectedItem).LastName + "'s Schedule";
            }
            catch (Exception ex)
            {

                MessageBox.Show(ex.Message + "\n\n" + ex.InnerException.Message);
            }
            
        }

        // This event handler is fired when the selection for the dgAllEmployees selected item is changed. It populates the dgIndiviualsSchedule 
        // data grid with the schedule of the chosen user.
        private void DgAllEmployees_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                populatIndividualsEmployeeSchedule();
                lblIndividualsSchedule.Content = ((User)dgAllEmployees.SelectedItem).FirstName + " " + ((User)dgAllEmployees.SelectedItem).LastName + "'s Schedule";
            }
            catch (Exception ex)
            {

                MessageBox.Show(ex.Message + "\n\n" + ex.InnerException.Message);
            }
        }

        // This event handler is fired when the assign employee button is clicked. It assigns the chosen employees to the chosen activity.
        private void BtnAssignEmployee_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                if(dgAllEmployees.SelectedItem == null)
                {
                    MessageBox.Show("You must make a selection from the All Employees list.");
                    return;
                }
                if (dgAllActivities.SelectedItem == null)
                {
                    MessageBox.Show("You must make a selection from the All Activities list.");
                    return;
                }
                foreach(PersonScheduleVM se in dgScheduledEmployees.Items)
                {
                    if(se.PersonID == ((User)dgAllEmployees.SelectedItem).PersonID)
                    {
                        MessageBox.Show("You must choose an employee that is not currently assigned to this activity.");
                        return;
                    }
                }
                Schedule schedule = new Schedule()
                {
                    ActivityID = ((ActivityVM)dgAllActivities.SelectedItem).ActivityID,
                    ActivitySchedule = false,
                    PersonID = ((User)dgAllEmployees.SelectedItem).PersonID,
                    End = ((ActivityVM)dgAllActivities.SelectedItem).End,
                    Start = ((ActivityVM)dgAllActivities.SelectedItem).Start,
                    Type = "Employee"
                };

                if (_scheduleManager.AddSchedule(schedule))
                {
                    MessageBox.Show(((User)dgAllEmployees.SelectedItem).FirstName + " " + ((User)dgAllEmployees.SelectedItem).LastName + " has been added to " + ((ActivityVM)dgAllActivities.SelectedItem).ActivityName);
                    //populateAllActivities();
                    populateEmployeesScheduled();
                    populateAllEmployees();
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show(ex.Message + "\n\n" + ex.InnerException.Message);
            }
        }

        // This event handler is fired when the unassign employee button is clicked. It unassigns the chosen employee from the chosen activity.
        private void BtnUnassignEmployee_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                if(dgScheduledEmployees.SelectedItem == null)
                {
                    MessageBox.Show("You must select a scheduled employee.");
                    return;
                }
                if (_scheduleManager.DeactivateSchedule(((PersonScheduleVM)dgScheduledEmployees.SelectedItem).ScheduleID))
                {
                    MessageBox.Show("You have Unassigned " + ((PersonScheduleVM)dgScheduledEmployees.SelectedItem).FirstName + " " + ((PersonScheduleVM)dgScheduledEmployees.SelectedItem).LastName + " from " + ((ActivityVM)dgAllActivities.SelectedItem).ActivityName);
                    //populateAllActivities();
                    populateAllEmployees();
                    populateEmployeesScheduled();
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show(ex.Message + "\n\n" + ex.InnerException.Message);
            }
        }

        // This event handler is fired when the columns for the dgIndividualSchedule data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgIndividualsSchedule_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgIndividualsSchedule.Columns.RemoveAt(14);
            dgIndividualsSchedule.Columns.RemoveAt(12);
            dgIndividualsSchedule.Columns.RemoveAt(11);
            dgIndividualsSchedule.Columns.RemoveAt(10);
            dgIndividualsSchedule.Columns.RemoveAt(9);
            dgIndividualsSchedule.Columns.RemoveAt(8);
            dgIndividualsSchedule.Columns.RemoveAt(7);
            dgIndividualsSchedule.Columns.RemoveAt(6);
            dgIndividualsSchedule.Columns.RemoveAt(5);
            dgIndividualsSchedule.Columns.RemoveAt(4);
            dgIndividualsSchedule.Columns.RemoveAt(3);
            dgIndividualsSchedule.Columns.RemoveAt(2);
            dgIndividualsSchedule.Columns.RemoveAt(0);
        }
    }
}
