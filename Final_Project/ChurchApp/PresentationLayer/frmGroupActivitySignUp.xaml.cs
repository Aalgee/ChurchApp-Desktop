using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using DataObjects;
using LogicLayer;

namespace PresentationLayer
{
    /// <summary>
    /// Interaction logic for frmGroupActivitySignUp.xaml
    /// </summary>
    public partial class frmGroupActivitySignUp : Window
    {
        // This class is is used as a way for groups to sign up for activities

        DataGrid _groups;
        string _groupID;
        IGroupManager _groupManager;
        IActivityManager _activityManager;

        // This is the constructor for this class
        public frmGroupActivitySignUp(string groupID, IGroupManager groupManager, IActivityManager activityManager, DataGrid groups)
        {
            InitializeComponent();
            _groupID = groupID;
            _groupManager = groupManager;
            _activityManager = activityManager;
            _groups = groups;
            populateGroupActivities();

        }

        // This populates the dgGroupActivities data grid with all the activities that a particular group is signed up to participate in.
        private void populateGroupActivities()
        {

            var allActivities = _activityManager.RetrieveAllGroupActivities();
            var groupActivities = _groupManager.RetrieveActivitiesByGroupID(_groupID);
            

            for (int i = 0; i < allActivities.Count; i++)
            {
                for (int j = 0; j < groupActivities.Count; j++)
                {
                    if (allActivities[i].ActivityID == groupActivities[j].ActivityID)
                    {
                        allActivities.Remove(allActivities[i]);
                    }
                }
            }

            dgGroupActivities.ItemsSource = allActivities;
        }

        // This event handler is fired when the columns for the dgGroupActivities data grid are automagically generated. This formats the
        // data grid in such a way that it will be more human readable.
        private void DgGroupActivities_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgGroupActivities.Columns.RemoveAt(4);
            dgGroupActivities.Columns.RemoveAt(3);
            dgGroupActivities.Columns.RemoveAt(0);

            dgGroupActivities.Columns[0].Header = "Activity Name";
            dgGroupActivities.Columns[1].Header = "Start Time";
        }

        // This event handler is fired when the back button is clicked. It closes the form.
        private void BtnBack_Click(object sender, RoutedEventArgs e)
        {
            
            this.Close();
            _groups.ItemsSource = _groupManager.RetrieveActivitiesByGroupID(_groupID);

        }

        // This event handler is fired when the add button is clicked. It adds a selected activity to the list of activities a group
        // is participating in
        private void BtnAdd_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                int activityID = ((GroupActivityVM)dgGroupActivities.SelectedItem).ActivityID;
                if (_activityManager.AddGroupActivity(activityID, _groupID))
                {
                    MessageBox.Show("Activity added to " + _groupID + " group.");
                    populateGroupActivities();
                }
            
            }
            catch (Exception)
            {
                MessageBox.Show("You must select an activity first");
            }
        }
            
    }
}
